{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Attach to Edge",
            "port": 9222,
            "request": "attach",
            "type": "msedge",
            "webRoot": "import openai
            
            openai.api_key = "your_openai_api_key"
            
            def generate_response(prompt, history=[]):
                conversation = "\n".join(history + [f"User: {prompt}", "Assistant:"])
                    response = openai.Completion.create(
                            engine="gpt-4",  # or "gpt-3.5-turbo"
                                    prompt=conversation,
                                            max_tokens=150,
                                                    temperature=0.7,
                                                            stop=["User:", "Assistant:"]
                                                                )
                                                                    return response.choices[0].text.strip()
                                                                    
                                                                    # Example usage
                                                                    chat_history = []
                                                                    user_input = "What’s a powerful image for a heist-themed lyrical construct?"
                                                                    
                                                                    reply = generate_response(user_input, chat_history)
                                                                    chat_history.append(f"User: {user_input}")
                                                                    chat_history.append(f"Assistant: {reply}")
                                                                    
                                                                    print(reply)import openai
                                                                    
                                                                    openai.api_key = "your_openai_api_key"
                                                                    
                                                                    def generate_response(prompt, history=[]):
                                                                        conversation = "\n".join(history + [f"User: {prompt}", "Assistant:"])
                                                                            response = openai.Completion.create(
                                                                                    engine="gpt-4",  # or "gpt-3.5-turbo"
                                                                                            prompt=conversation,
                                                                                                    max_tokens=150,
                                                                                                            temperature=0.7,
                                                                                                                    stop=["User:", "Assistant:"]
                                                                                                                        )
                                                                                                                            return response.choices[0].text.strip()
                                                                                                                            
                                                                                                                            # Example usage
                                                                                                                            chat_history = []
                                                                                                                            user_input = "What’s a powerful image for a heist-themed lyrical construct?"
                                                                                                                            
                                                                                                                            reply = generate_response(user_input, chat_history)
                                                                                                                            chat_history.append(f"User: {user_input}")
                                                                                                                            chat_history.append(f"Assistant: {reply}")
                                                                                                                            
                                                                                                                            print(reply)"
        },
        {
            "name": "Launch Chrome",
            "request": "launch",
            "type": "chrome",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Program",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "program": "${file}"
        }
    ]
}